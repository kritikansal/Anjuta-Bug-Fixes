/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*- */
/*
 *  ianjuta-indicable.h -- Autogenerated from libanjuta.idl
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

#ifndef _IANJUTA_INDICABLE_H_
#define _IANJUTA_INDICABLE_H_

#include <glib-object.h>
#include <libanjuta/interfaces/ianjuta-iterable.h>

G_BEGIN_DECLS

#define IANJUTA_TYPE_INDICABLE (ianjuta_indicable_get_type ())
#define IANJUTA_INDICABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), IANJUTA_TYPE_INDICABLE, IAnjutaIndicable))
#define IANJUTA_IS_INDICABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), IANJUTA_TYPE_INDICABLE))
#define IANJUTA_INDICABLE_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), IANJUTA_TYPE_INDICABLE, IAnjutaIndicableIface))

#define IANJUTA_TYPE_INDICABLE_INDICATOR (ianjuta_indicable_indicator_get_type())

#define IANJUTA_INDICABLE_ERROR ianjuta_indicable_error_quark()

typedef struct _IAnjutaIndicable IAnjutaIndicable;
typedef struct _IAnjutaIndicableIface IAnjutaIndicableIface;

/**
   * IAnjutaIndicableIndicator:
   * @IANJUTA_INDICABLE_NONE: No indicator
   * @IANJUTA_INDICABLE_IMPORTANT: Important indicator
   * @IANJUTA_INDICABLE_WARNING: Warning indicator
   * @IANJUTA_INDICABLE_CRITICAL: Critical indicator
   *
   * This enumeration is used to specify the appearance of the indicator
   */
typedef enum {
	IANJUTA_INDICABLE_NONE,
	IANJUTA_INDICABLE_IMPORTANT,
	IANJUTA_INDICABLE_WARNING,
	IANJUTA_INDICABLE_CRITICAL
} IAnjutaIndicableIndicator;


struct _IAnjutaIndicableIface {
	GTypeInterface g_iface;
	

	void (*clear) (IAnjutaIndicable *obj, GError **err);
	void (*set) (IAnjutaIndicable *obj, IAnjutaIterable *begin_location,  IAnjutaIterable *end_location,  IAnjutaIndicableIndicator indicator, GError **err);

};

GType ianjuta_indicable_indicator_get_type (void);

GQuark ianjuta_indicable_error_quark     (void);
GType  ianjuta_indicable_get_type        (void);

void ianjuta_indicable_clear (IAnjutaIndicable *obj, GError **err);

void ianjuta_indicable_set (IAnjutaIndicable *obj, IAnjutaIterable *begin_location,  IAnjutaIterable *end_location,  IAnjutaIndicableIndicator indicator, GError **err);


G_END_DECLS

#endif
